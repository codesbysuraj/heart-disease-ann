# -*- coding: utf-8 -*-
"""heart_disease_app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11K2yUQFKRjREtIXZowAOS1ixqXBrp3Oq
"""

import streamlit as st
import numpy as np
import tensorflow as tf

# Load the trained model
model = tf.keras.models.load_model('heart_ann_model.h5')

# Set Streamlit page configuration
st.set_page_config(page_title="Heart Disease Predictor", layout="centered")

# Header section
st.markdown("<h1 style='text-align: center;'>‚ù§Ô∏è Heart Disease Prediction</h1>", unsafe_allow_html=True)
st.markdown("<p style='text-align: center;'>Using Artificial Neural Network (ANN)</p>", unsafe_allow_html=True)
st.markdown("---")

# Instructions
with st.expander("üìã **About this App**", expanded=False):
    st.write("""
        This tool uses a trained deep learning model (ANN) to estimate your risk of heart disease.
        Fill in your health data below and click **Predict** to see your risk level.
    """)

st.markdown("### üßç Personal Information")

col1, col2 = st.columns(2)
with col1:
    age = st.number_input("üî¢ Age", 1, 120, step=1)
    sex = st.selectbox("‚ößÔ∏è Sex", options=["Male", "Female"])
    cp = st.selectbox("üíì Chest Pain Type (cp)", [0, 1, 2, 3], help="Types: 0 = Typical Angina, 1 = Atypical Angina, 2 = Non-anginal Pain, 3 = Asymptomatic")
    trestbps = st.number_input("üíâ Resting BP (trestbps)", 80, 200)
    chol = st.number_input("üçî Cholesterol (mg/dl)", 100, 600)

with col2:
    fbs = st.selectbox("üç¨ Fasting Blood Sugar > 120 mg/dl (fbs)", [0, 1])
    restecg = st.selectbox("ü©∫ Resting ECG (restecg)", [0, 1, 2])
    thalach = st.number_input("üèÉ Max Heart Rate Achieved (thalach)", 60, 220)
    exang = st.selectbox("üèãÔ∏è‚Äç‚ôÇÔ∏è Exercise-Induced Angina (exang)", [0, 1])
    oldpeak = st.number_input("üìâ ST Depression (oldpeak)", 0.0, 10.0, step=0.1)

st.markdown("### ü´Ä Additional Clinical Data")

col3, col4 = st.columns(2)
with col3:
    slope = st.selectbox("üìà Slope of ST Segment", [0, 1, 2])
    ca = st.selectbox("üß™ Major Vessels Colored (ca)", [0, 1, 2, 3, 4])

with col4:
    thal = st.selectbox("üß¨ Thalassemia Type", [0, 1, 2, 3], help="0 = Unknown, 1 = Fixed Defect, 2 = Normal, 3 = Reversible Defect")

# Convert categorical inputs
sex = 1 if sex == "Male" else 0

# Prediction logic
st.markdown("---")
if st.button("üîç Predict Risk"):
    user_input = np.array([[age, sex, cp, trestbps, chol, fbs,
                            restecg, thalach, exang, oldpeak,
                            slope, ca, thal]])
    prediction = model.predict(user_input)[0][0]

    if prediction > 0.5:
        st.error("üö® **High Risk of Heart Disease**")
    else:
        st.success("‚úÖ **Low Risk of Heart Disease**")

    st.markdown(f"**Model Confidence:** `{prediction:.2%}`")

st.markdown("---")
st.caption("üîí This prediction tool is for educational purposes only. Always consult a medical professional for diagnosis.")
